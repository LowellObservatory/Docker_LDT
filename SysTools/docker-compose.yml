version: '3.7'

services:
 nginx-proxyman:
    container_name: nginx-proxyman
    image: 'jc21/nginx-proxy-manager:latest'
    restart: always
    networks:
      - ligDockernetPub
    ports:
      - '80:80'
      - '81:81'
      - '443:443'
      - '5544:5544'
      - '5544:5544/udp'
      - '18899:18899'
      - '18899:18899/udp'
    environment:
       DB_SQLITE_FILE: "/data/database.sqlite"
       DISABLE_IPV6: 'true'
    volumes:
      - ${DCDATADIR}/nginx-proxyman:/data
      - ${DCDATADIR}/letsencrypt:/etc/letsencrypt
      - ${DCDEVDIR}/nginx-proxyman_config.json:/app/config/production.json
      - ${DCDATADIR}/logs/letsencrypt/:/var/log/letsencrypt/
    dns:
      - 10.11.131.100
 
 omsa:
    container_name: omsa84
    image: jdelaros1/dell-omsa84
    ports:
     - 1311:1311
    networks:
      - ligDockernetPub
    restart: always
    cap_add:
     - ALL
    privileged: true
    volumes:
     - "/lib/modules:/lib/modules:ro"
    dns:
      - 10.11.131.100

# nginx-frontline:
#   container_name: nginx-frontline
#   image: nginx:stable-alpine
##   ports:
##    - 80:80
#   network_mode: host
##      networks:
##     - ligDockernetPub
#   restart: always
#   volumes:
#    - $PWD/nginx_routing.conf:/etc/nginx/conf.d/default.conf
#   dns:
#     - 10.11.131.100

 jekyll:
    container_name: jekyll
    command: jekyll serve
    image: jekyll/jekyll:latest
    volumes:
      - $PWD/mainLandingPage/:/srv/jekyll
      - ${DCDATADIR}/jekyll/:/usr/local/bundle
    ports:
     - 4000:4000
    environment:
     - JEKYLL_UID=${DCUSERID}
     - JEKYLL_GID=${DCGRPID}
    networks:
      - ligDockernetPub
    restart: always
    dns:
      - 10.11.131.100

 portainer:
    container_name: portainer
    image: portainer/portainer-ce:${PORTAINER_VERSION}-alpine
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ${DCDATADIR}/portainer:/data
    ports:
      - "9000:9000"
    networks:
      - ligDockernetPub
    command: -H unix:///var/run/docker.sock
    restart: always
    dns:
      - 10.11.131.100

networks:
    ligDockernetPub:
        name: ligDockernetPub
        driver: bridge
        #enable_ipv6: false
        #        driver_opts:
        #            parent: eno1
    ligDockernetPrv:
        name: ligDockernetPrv
        driver: macvlan
        driver_opts:
            parent: eno4
#        ipam:
#            config:
#              - subnet: "192.168.33.0/24"
#                ip_range: "192.168.33.43/32"
#                gateway: "192.168.33.1"

